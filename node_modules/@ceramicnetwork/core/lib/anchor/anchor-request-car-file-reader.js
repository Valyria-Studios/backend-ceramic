var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { StreamID } from '@ceramicnetwork/streamid';
import { Memoize } from 'mapmoize';
export class AnchorRequestCarFileReader {
    constructor(carFile) {
        this.carFile = carFile;
    }
    get genesis() {
        return this.carFile.get(this.streamId.cid);
    }
    get root() {
        const rootCid = this.carFile.roots[0];
        return this.carFile.get(rootCid);
    }
    get timestamp() {
        return new Date(this.root.timestamp);
    }
    get streamId() {
        return StreamID.fromBytes(this.root.streamId);
    }
    get tip() {
        return this.root.tip;
    }
}
__decorate([
    Memoize(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], AnchorRequestCarFileReader.prototype, "genesis", null);
__decorate([
    Memoize(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], AnchorRequestCarFileReader.prototype, "root", null);
__decorate([
    Memoize(),
    __metadata("design:type", Date),
    __metadata("design:paramtypes", [])
], AnchorRequestCarFileReader.prototype, "timestamp", null);
__decorate([
    Memoize(),
    __metadata("design:type", StreamID),
    __metadata("design:paramtypes", [])
], AnchorRequestCarFileReader.prototype, "streamId", null);
__decorate([
    Memoize(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [])
], AnchorRequestCarFileReader.prototype, "tip", null);
//# sourceMappingURL=anchor-request-car-file-reader.js.map