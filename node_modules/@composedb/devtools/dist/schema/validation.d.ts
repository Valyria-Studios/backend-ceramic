import type { SignedCommitContainer } from '@ceramicnetwork/common';
import { Model, type ModelDefinition } from '@ceramicnetwork/stream-model';
import type { CeramicAPI } from '@composedb/types';
import { Cacao } from '@didtools/cacao';
export declare function isSignedCommitContainer(input: Record<string, any>): input is SignedCommitContainer;
export declare function assertAuthenticatedDID(ceramic: CeramicAPI): void;
export declare function assertValidModelInterfaceType(definition: ModelDefinition, expectInterface: boolean): void;
export declare function assertValidCacao(cacao: Cacao, controller: string): void;
export declare function assertSupportedReadModelController(model: Model, signedCommitContainer: SignedCommitContainer): Promise<void>;
export declare function assertSupportedWriteModelController(model: Model, ceramic: CeramicAPI): void;
